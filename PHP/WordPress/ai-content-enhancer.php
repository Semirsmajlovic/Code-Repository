<?php

/**
 * Updates the content of a given post using AI and adds relevant hashtags as metadata.
 * 
 * This function uses the OpenAI API to generate new content for a given post and also suggests relevant hashtags. The new content is generated by passing the existing post content to the API and asking it to generate a paragraph about it. The function then updates the post with this new content. The relevant hashtags are also generated using the OpenAI API, and these are added as metadata to the post.
 *
 * @since      1.0.0
 * 
 * @param WP_Post $post The post object whose content is to be updated. Must have at least 'ID' and 'post_content' attributes.
 * @param string $api_key The OpenAI API key.
 * 
 * @return void
 * 
 * @throws WP_Error If the API call fails or if the post update fails, the function will throw an error with the appropriate message.
 *
 * @see https://openai.com/api/ for details on the OpenAI API.
 */
function update_post_content_with_ai($post, $api_key = null) {
    if (!defined('OPEN_AI_API_KEY')) {
        echo "Error: OpenAI API Key not defined in wp-config.php.";
        return;
    }
    $api_key = OPEN_AI_API_KEY;
    $retry_count = 0;
    while ($retry_count < 3) {
        $content = $post->post_content;
        $ai_prompt = "Give me one paragraph about '$content'. Make sure it is in third-person.";
        $data = [
            'model' => 'gpt-3.5-turbo',
            'messages' => [
                [
                    'role' => 'user',
                    'content' => $ai_prompt
                ]
            ]
        ];
        $json_data = json_encode($data);
        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL, 'https://api.openai.com/v1/chat/completions');
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($curl, CURLOPT_POST, 1);
        curl_setopt($curl, CURLOPT_POSTFIELDS, $json_data);
        curl_setopt($curl, CURLOPT_HTTPHEADER, [
            'Content-Type: application/json',
            'Authorization: Bearer ' . $api_key
        ]); 
        $response = curl_exec($curl);
        curl_close($curl);
        if (!is_wp_error($response)) {
            $response_object = json_decode($response);
            $new_content = $response_object->choices[0]->message->content;
            $updated_post_data = array(
                'ID'           => $post->ID,
                'post_content' => $new_content,
                'post_status'  => $post->post_status,
            );
            $result = wp_update_post($updated_post_data, true);
            if (is_wp_error($result)) {
                $errors = $result->get_error_messages();
                foreach ($errors as $error) {
                    echo $error;
                }
            }
            break; // Break the loop if API call was successful.
        } else {
            $retry_count++;
            if ($retry_count >= 3) {
                echo "Error: Unable to fetch data from the API after $retry_count attempts.";
                return;
            }
        }
    }
    $hashtag_prompt = "Give me 5 hashtags for '$new_content'. Ensure that they are all on one line and comma separated.";
    $hashtag_data = [
        'model' => 'gpt-3.5-turbo',
        'messages' => [
            [
                'role' => 'user',
                'content' => $hashtag_prompt
            ]
        ]
    ];
    $hashtag_json_data = json_encode($hashtag_data);
    $curl = curl_init();
    curl_setopt($curl, CURLOPT_URL, 'https://api.openai.com/v1/chat/completions');
    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($curl, CURLOPT_POST, 1);
    curl_setopt($curl, CURLOPT_POSTFIELDS, $hashtag_json_data);
    curl_setopt($curl, CURLOPT_HTTPHEADER, [
        'Content-Type: application/json',
        'Authorization: Bearer ' . $api_key
    ]);
    $response_hashtag = curl_exec($curl);
    curl_close($curl);
    if (!is_wp_error($response_hashtag)) {
        $hashtag_response_object = json_decode($response_hashtag);
        $new_hashtags = $hashtag_response_object->choices[0]->message->content;
        $update_online_event = update_post_meta($post->ID, 'online_event', $new_hashtags);
        if ($update_online_event) {
            $post_update_result = wp_update_post(array(
                'ID' => $post->ID,
                'post_type' => 'wp_events',
            ));
            if (is_wp_error($post_update_result)) {
                echo "Error: Unable to save the post.";
            } else {
                echo "Success: Post and custom field updated successfully!";
            }
        } else {
            echo "Error: Unable to update the custom field.";
        }
    } else {
        echo "Error: Unable to fetch data from the API.";
    }
}

?>